## Learn more about this file at 'https://www.gitpod.io/docs/references/gitpod-yml'
##
## This '.gitpod.yml' file when placed at the root of a project instructs
## Gitpod how to prepare & build the project, start development environments
## and configure continuous prebuilds. Prebuilds when enabled builds a project
## like a CI server so you can start coding right away - no more waiting for
## dependencies to download and builds to finish when reviewing pull-requests
## or hacking on something new.
##
tasks:
  - name: Initial Setup
    init: |
      npm install @47ng/cloak
      CLOAK_ENCRYPTION_KEY=$(node -e "const { generateKey } = require('@47ng/cloak'); console.log(generateKey());")
      APP_URL=$(gp url 8080)
      SIP_SIGNALING_SERVER=$(gp url 5062 | sed 's/http/ws/g')
      cp .env.example .env
      sed -i "s|APP_URL=.*|APP_URL=$APP_URL|g" .env
      sed -i "s|CLOAK_ENCRYPTION_KEY=.*|CLOAK_ENCRYPTION_KEY=$CLOAK_ENCRYPTION_KEY|g" .env
      sed -i "s|SIP_SIGNALING_SERVER=.*|SIP_SIGNALING_SERVER=$SIP_SIGNALING_SERVER|g" .env
      sed -i "s|postgresql://postgres:postgres@postgres:5432/goodtok|postgresql://postgres:postgres@localhost:5432/goodtok|g" .env
      sed -i "s|DOCKER_HOST_ADDRESS=.*|DOCKER_HOST_ADDRESS=$(gp url 5062 | sed 's|https://||')|g" .env
      npm uninstall @47ng/cloak
      npm install
      npm run build
      touch /workspace/.init_done
      exit
    command: echo "Initial Setup Complete"

  - name: Start API Server
    before: |
      while [ ! -f /workspace/.init_done ]; do sleep 2; done
    command: |
      gp ports await 4222 # Wait for nats to be ready
      gp ports await 5432 # Wait for postgres to be ready
      npm run start:apiserver

  - name: Start Front Office
    before: |
      while [ ! -f /workspace/.init_done ]; do sleep 2; done
      API_ENDPOINT=$(gp url 6789)/v1
      sed -i "s|http://localhost:6789/v1|$API_ENDPOINT|g" /workspace/goodtok/mods/frontoffice/index.html
    command: npm run start:frontoffice

  - name: Start Demo Widget
    before: |
      while [ ! -f /workspace/.init_done ]; do sleep 2; done
      API_ENDPOINT=$(gp url 6789)/v1
      KEY=$(echo -n "{\"gtid\":\"g-7b7c46fb05\",\"server\":\"$API_ENDPOINT\"}" | base64 -w 0)
      sed -i "s|key=[^&\"]*|key=$KEY|g" /workspace/goodtok/mods/widget/index.html
    command: npm run start:widget

  - name: Start Docker Containers
    before: |
      while [ ! -f /workspace/.init_done ]; do sleep 2; done
    command: |
      npm run start:services
      gp ports await 5432
      sleep 10 # Check for the port only is flaky, so we wait a bit more
      npm run db:migrate
      exit

  - name: Open Preview Ports
    before: |
      while [ ! -f /workspace/.init_done ]; do sleep 2; done
    command: |
      gp ports await 8080
      gp ports await 8181
      gp ports await 8025
      gp preview $(gp url 8025) --external
      gp preview $(gp url 8080)/login --external
      gp preview $(gp url 8181) --external
      exit

ports:
  - port: 8080
    visibility: public
    onOpen: ignore
  - port: 8181
    visibility: public
    onOpen: ignore
  - port: 8025
    visibility: public
    onOpen: ignore
  - port: 5062
    visibility: public
    onOpen: ignore
  - port: 6789
    visibility: public
    onOpen: ignore
  - port: 1025
    visibility: private
    onOpen: ignore
  - port: 5063
    visibility: private
    onOpen: ignore
  - port: 4222
    visibility: private
    onOpen: ignore
  - port: 5432
    visibility: private
    onOpen: ignore
