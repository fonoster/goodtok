## Learn more about this file at 'https://www.gitpod.io/docs/references/gitpod-yml'
##
## This '.gitpod.yml' file when placed at the root of a project instructs
## Gitpod how to prepare & build the project, start development environments
## and configure continuous prebuilds. Prebuilds when enabled builds a project
## like a CI server so you can start coding right away - no more waiting for
## dependencies to download and builds to finish when reviewing pull-requests
## or hacking on something new.
##
tasks:
  - name: Initial Setup
    init: |
      npm install @47ng/cloak
      CLOAK_ENCRYPTION_KEY=$(node -e "const { generateKey } = require('@47ng/cloak'); console.log(generateKey());")
      APP_URL=$(gp url 8080)
      SIP_SIGNALING_SERVER=$(gp url 5062 | sed 's/http/ws/g'):5062
      cp .env.example .env
      sed -i "s|APP_URL=.*|APP_URL=$APP_URL|g" .env
      sed -i "s|CLOAK_ENCRYPTION_KEY=.*|CLOAK_ENCRYPTION_KEY=$CLOAK_ENCRYPTION_KEY|g" .env
      sed -i "s|SIP_SIGNALING_SERVER=.*|SIP_SIGNALING_SERVER=$SIP_SIGNALING_SERVER|g" .env
      mkdir -p .keys
      openssl genpkey -algorithm RSA -out ./.keys/private.key -pkeyopt rsa_keygen_bits:4096
      openssl rsa -in ./.keys/private.key -pubout -out ./.keys/public.key
      npm uninstall @47ng/cloak
      npm install
      npm run build
    command: echo "Initial Setup Complete"

  - name: Start API Server
    before: sleep 60
    command: npm run start:apiserver

  - name: Start Front Office
    before: |
      sleep 60
      API_ENDPOINT=$(gp url 8080)/v1
      sed -i "s|http://localhost:6789/v1|$API_ENDPOINT|g" /workspace/goodtok/mods/frontoffice/index.html
    command: npm run start:frontoffice

  - name: Start Docker Containers
    command: docker-compose -f compose.yaml -f compose.dev.yaml up nats routr postgres

ports:
  - port: 8080
    visibility: public
    onOpen: notify
  - port: 5062
    visibility: public
    onOpen: notify
  - port: 6789
    visibility: public
    onOpen: notify

# github:
#   prebuilds:
#     branches:
#       fix/update-gitpod-workflow: true
#     pullRequests: true
#     pullRequestsFromForks: true
#     addCheck: true
#     addComment: false
#     addBadge: true
