"use strict";(self.webpackChunkgoodtok_docs=self.webpackChunkgoodtok_docs||[]).push([[294],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),m=p(n),h=a,d=m["".concat(s,".").concat(h)]||m[h]||u[h]||l;return n?o.createElement(d,i(i({ref:t},c),{},{components:n})):o.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=h;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[m]="string"==typeof e?e:a,i[1]=r;for(var p=2;p<l;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7456:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>p});var o=n(7462),a=(n(7294),n(3905));const l={},i="Deploy with Docker",r={unversionedId:"self-hosting/deploy-with-docker",id:"self-hosting/deploy-with-docker",title:"Deploy with Docker",description:"Docker compose is the easiest way to deploy a self-hosted instance of Goodtok. This guide will walk you through the process of deploying the Goodtok services using Docker and Docker Compose.",source:"@site/docs/self-hosting/deploy-with-docker.md",sourceDirName:"self-hosting",slug:"/self-hosting/deploy-with-docker",permalink:"/docs/self-hosting/deploy-with-docker",draft:!1,editUrl:"https://github.com/fonoster/goodtok/edit/main/docs/docs/self-hosting/deploy-with-docker.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/docs/self-hosting/introduction"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Securing the application",id:"securing-the-application",level:2},{value:"Custom Email Templates",id:"custom-email-templates",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deploy-with-docker"},"Deploy with Docker"),(0,a.kt)("p",null,"Docker compose is the easiest way to deploy a self-hosted instance of Goodtok. This guide will walk you through the process of deploying the Goodtok services using Docker and Docker Compose."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"The only prerequisite for Goodtok is to have ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"Docker")," installed on the host machine."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"First, create a new directory in your preferred location and change to that directory. For this guide, we will use the directory ",(0,a.kt)("inlineCode",{parentName:"p"},"goodtok")," in the home directory."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir goodtok\ncd goodtok\n")),(0,a.kt)("p",null,"Next, create a ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file with the following content:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# General config\nAPI_ENDPOINT=http://localhost:6789/v1\nAPP_URL=http://localhost:8080\nLOGS_LEVEL=verbose\n\n# Initial store owner credentials\n#   The server will create a new owner if the email does not exist\n#   Goodtok will the password if the email exists\nOWNER_EMAIL=admin@goodtok.local\nOWNER_PASSWORD=changeme\n\n# PeerJs Server config\nSIGNALING_HOST=localhost\nSIGNALING_PORT=9000\n# Ucomment to use custom ICE servers\n# ICE_SERVERS_CONFIG=\'[{"urls": "stun:stun.l.google.com:19302"}, {"urls": "turn:us-turn4.xirsys.com:80?transport=udp", "username": "xirsys", "credential": "xirsys"}]\'\n\n# SMTP config\nSMTP_HOST=localhost\nSMTP_PORT=1025\nSMTP_SECURE=false\nSMTP_AUTH_USER=postmaster@goodtok.local\nSMTP_AUTH_PASS=secret\nSMTP_SENDER=Goodtok Info <info@goodtok.local>\n\n# Database and encryption config\nPOSTGRES_USER=postgres\nPOSTGRES_PASSWORD=postgres\nDATABASE_URL=postgresql://postgres:postgres@postgres:5432/goodtok\nCLOAK_ENCRYPTION_KEY=k1.aesgcm256.MmPSvzCG9fk654bAbl30tsqq4h9d3N4F11hlue8bGAY=\n\n# Uncomment to enable custom email templates\n#  See mods/apiserver/src/notifications/templates for available templates\n#  If not set, the default templates will be used\n# EMAIL_TEMPLATES_DIR=/path/to/email/templates\n')),(0,a.kt)("p",null,"Few important things to note:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Please be sure to update all secrets with your own values"),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"API_ENDPOINT")," must be the URL where the API will be accessible. For example, if you are running the application locally, you can use ",(0,a.kt)("inlineCode",{parentName:"li"},"http://localhost:6789/v1"),". If you are running the application on a server, you can use, for example, ",(0,a.kt)("inlineCode",{parentName:"li"},"https://api.goodtok.example.com/v1")),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"APP_URL")," must be the URL where the application will be accessible. For example, if you are running the application locally, you can use ",(0,a.kt)("inlineCode",{parentName:"li"},"http://localhost:8080"),". If you are running the application on a server, you can use, for example, ",(0,a.kt)("inlineCode",{parentName:"li"},"https://goodtok.example.com")),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"SIGNALING_HOST")," must be the URL where the signaling server will be accessible. For example, if you are running the application locally, you can use ",(0,a.kt)("inlineCode",{parentName:"li"},"localhost"),". If you are running the application on a server, you can use, for example, ",(0,a.kt)("inlineCode",{parentName:"li"},"goodtok.example.com")),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"SIGNALLING_PORT")," must be the port where the signaling server will be accessible. For example, if you are running the application locally, you can use ",(0,a.kt)("inlineCode",{parentName:"li"},"9000"),". If you are running the application on a server, you can use, for example, ",(0,a.kt)("inlineCode",{parentName:"li"},"443")),(0,a.kt)("li",{parentName:"ul"},"You must point your SMTP variables to a valid SMTP server"),(0,a.kt)("li",{parentName:"ul"},"Goodtok will use the ",(0,a.kt)("inlineCode",{parentName:"li"},"OWNER_EMAIL")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"OWNER_PASSWORD")," variables to create the first user. The server will create a new owner if the email does not exist. Goodtok will update the password if the email exists. You can use any email address and password for this purpose."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"CLOAK_ENCRYPTION_KEY")," must be a valid encryption key. You can use ",(0,a.kt)("a",{parentName:"li",href:"https://cloack.47ng.com"},"Cloack")," to generate a new key."),(0,a.kt)("li",{parentName:"ul"},"Uncomment the ",(0,a.kt)("inlineCode",{parentName:"li"},"ICE_SERVERS_CONFIG")," variable to enable ICE servers. You can use ",(0,a.kt)("a",{parentName:"li",href:"https://xirsys.com"},"Xirsys")," to get a free account.")),(0,a.kt)("p",null,"Finally, run the following command to start the application:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -o ./compose.yaml https://raw.githubusercontent.com/fonoster/goodtok/main/compose.yaml\ndocker compose up -d\n")),(0,a.kt)("p",null,"The previous command will start all the services, including the Front Office. You can then open the application at ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8080"},"http://localhost:8080")," and access the dashboard."),(0,a.kt)("h2",{id:"securing-the-application"},"Securing the application"),(0,a.kt)("p",null,"Comming soon..."),(0,a.kt)("h2",{id:"custom-email-templates"},"Custom Email Templates"),(0,a.kt)("p",null,"Goodtok use handlebars to render email templates. You can customize the templates by setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"EMAIL_TEMPLATES_DIR")," variable to the path where your templates are located. The following templates are available:"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"inviteExistingUserTemplate.hbs")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"inviteNewUserTemplate.hbs")," templates are used to send invitations to users. The ",(0,a.kt)("inlineCode",{parentName:"p"},"inviteExistingUserTemplate.hbs")," template is used when the user already exists in the system. The ",(0,a.kt)("inlineCode",{parentName:"p"},"inviteNewUserTemplate.hbs")," template is used when the user does not exist in the system."),(0,a.kt)("p",null,"If a template is not set at the path specified by the ",(0,a.kt)("inlineCode",{parentName:"p"},"EMAIL_TEMPLATES_DIR")," variable, the default template will be used."),(0,a.kt)("p",null,"Available variables for the ",(0,a.kt)("inlineCode",{parentName:"p"},"inviteExistingUserTemplate.hbs")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"inviteNewUserTemplate.hbs")," templates:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"{{workspaceName}}"),": The name of the store"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"{{inviteUrl}}"),": The URL where the user can accept the invitation"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"{{oneTimePassword}}"),": The one-time password that the user can use to accept the invitation (only available in the ",(0,a.kt)("inlineCode",{parentName:"li"},"inviteNewUserTemplate.hbs")," template)")),(0,a.kt)("p",null,"An example of the ",(0,a.kt)("inlineCode",{parentName:"p"},"inviteExistingUserTemplate.hbs")," template:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<html>\n  <head>\n    <title>Invite</title>\n  </head>\n  <body>\n    <p>Welcome to Goodtok</p>\n    <p>To accept the invitation, please click the following link:\n      <a href="{{inviteUrl}}">{{inviteUrl}}</a>\n    </p>\n  </body>\n</html>\n')),(0,a.kt)("p",null,"An example of the ",(0,a.kt)("inlineCode",{parentName:"p"},"inviteNewUserTemplate.hbs")," template:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<html>\n  <head>\n    <title>Invite</title>\n  </head>\n  <body>\n    <p>Welcome to Goodtok</p>\n    <p>Your one-time password is: <b>{{oneTimePassword}}</b></p>\n    <p>You can use it at the following URL:\n      <a href="{{inviteUrl}}">{{inviteUrl}}</a></p>\n  </body>\n</html>\n')))}u.isMDXComponent=!0}}]);