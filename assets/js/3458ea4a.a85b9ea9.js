"use strict";(self.webpackChunkgoodtok_docs=self.webpackChunkgoodtok_docs||[]).push([[294],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>m});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(o),h=r,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||a;return o?n.createElement(m,i(i({ref:t},p),{},{components:o})):n.createElement(m,i({ref:t},p))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}h.displayName="MDXCreateElement"},7456:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=o(7462),r=(o(7294),o(3905));const a={},i="Deploy with Docker",l={unversionedId:"self-hosting/deploy-with-docker",id:"self-hosting/deploy-with-docker",title:"Deploy with Docker",description:"Docker compose is the easiest way to deploy a self-hosted instance of Goodtok. This guide will walk you through the process of deploying the Goodtok services using Docker and Docker Compose.",source:"@site/docs/self-hosting/deploy-with-docker.md",sourceDirName:"self-hosting",slug:"/self-hosting/deploy-with-docker",permalink:"/docs/self-hosting/deploy-with-docker",draft:!1,editUrl:"https://github.com/fonoster/goodtok/edit/main/docs/docs/self-hosting/deploy-with-docker.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/docs/self-hosting/introduction"}},s={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Securing the application",id:"securing-the-application",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deploy-with-docker"},"Deploy with Docker"),(0,r.kt)("p",null,"Docker compose is the easiest way to deploy a self-hosted instance of Goodtok. This guide will walk you through the process of deploying the Goodtok services using Docker and Docker Compose."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"The only prerequisite for Goodtok is to have ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"Docker")," installed on the host machine."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"First, create a new directory in your preferred location and change to that directory. For this guide, we will use the directory ",(0,r.kt)("inlineCode",{parentName:"p"},"goodtok")," in the home directory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir goodtok\ncd goodtok\n")),(0,r.kt)("p",null,"Next, create a ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file with the following content:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# General config\nAPI_ENDPOINT=http://localhost:6789/v1\nAPP_URL=http://localhost:8080\nLOGS_LEVEL=verbose\n\n# Initial store owner credentials\n#   The server will create a new owner if the email does not exist\n#   Goodtok will the password if the email exists\nOWNER_EMAIL=admin@goodtok.local\nOWNER_PASSWORD=changeme\n\n# PeerJs Server config\nSIGNALING_HOST=localhost\nSIGNALING_PORT=9000\n\n# SMTP config\nSMTP_HOST=localhost\nSMTP_PORT=1025\nSMTP_SECURE=false\nSMTP_AUTH_USER=postmaster@goodtok.local\nSMTP_AUTH_PASS=secret\nSMTP_SENDER=Goodtok Info <info@goodtok.local>\n\n# Database and encryption config\nPOSTGRES_USER=postgres\nPOSTGRES_PASSWORD=postgres\nDATABASE_URL=postgresql://postgres:postgres@postgres:5432/goodtok\nCLOAK_ENCRYPTION_KEY=k1.aesgcm256.MmPSvzCG9fk654bAbl30tsqq4h9d3N4F11hlue8bGAY=\n")),(0,r.kt)("p",null,"Few important things to note:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Please be sure to update all secrets with your own values"),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"API_ENDPOINT")," must be the URL where the API will be accessible. For example, if you are running the application locally, you can use ",(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:6789/v1"),". If you are running the application on a server, you can use, for example, ",(0,r.kt)("inlineCode",{parentName:"li"},"https://api.goodtok.example.com/v1")),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"APP_URL")," must be the URL where the application will be accessible. For example, if you are running the application locally, you can use ",(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:8080"),". If you are running the application on a server, you can use, for example, ",(0,r.kt)("inlineCode",{parentName:"li"},"https://goodtok.example.com")),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"SIGNALING_HOST")," must be the URL where the signaling server will be accessible. For example, if you are running the application locally, you can use ",(0,r.kt)("inlineCode",{parentName:"li"},"localhost"),". If you are running the application on a server, you can use, for example, ",(0,r.kt)("inlineCode",{parentName:"li"},"goodtok.example.com")),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"SIGNALLING_PORT")," must be the port where the signaling server will be accessible. For example, if you are running the application locally, you can use ",(0,r.kt)("inlineCode",{parentName:"li"},"9000"),". If you are running the application on a server, you can use, for example, ",(0,r.kt)("inlineCode",{parentName:"li"},"443")),(0,r.kt)("li",{parentName:"ul"},"You must point your SMTP variables to a valid SMTP server"),(0,r.kt)("li",{parentName:"ul"},"Goodtok will use the ",(0,r.kt)("inlineCode",{parentName:"li"},"OWNER_EMAIL")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"OWNER_PASSWORD")," variables to create the first user. The server will create a new owner if the email does not exist. Goodtok will update the password if the email exists. You can use any email address and password for this purpose.")),(0,r.kt)("p",null,"Finally, run the following command to start the application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -o ./compose.yaml https://raw.githubusercontent.com/fonoster/goodtok/main/compose.yaml\ndocker compose up -d\n")),(0,r.kt)("p",null,"The previous command will start all the services, including the Front Office. You can then open the application at ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:8080"},"http://localhost:8080")," and access the dashboard."),(0,r.kt)("h2",{id:"securing-the-application"},"Securing the application"),(0,r.kt)("p",null,"Comming soon..."))}d.isMDXComponent=!0}}]);