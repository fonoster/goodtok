"use strict";(self.webpackChunkgoodtok_docs=self.webpackChunkgoodtok_docs||[]).push([[336],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3799:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const a={},i="Development environment setup",l={unversionedId:"contributing/development-environment-setup",id:"contributing/development-environment-setup",title:"Development environment setup",description:"We welcome contributions from the community. This guide will help you get started with your development environment.",source:"@site/docs/contributing/development-environment-setup.md",sourceDirName:"contributing",slug:"/contributing/development-environment-setup",permalink:"/docs/contributing/development-environment-setup",draft:!1,editUrl:"https://github.com/fonoster/goodtok/edit/main/docs/docs/contributing/development-environment-setup.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Contributing guide",permalink:"/docs/contributing/guide"},next:{title:"Introduction",permalink:"/docs/self-hosting/introduction"}},p={},s=[{value:"Using Gitpod",id:"using-gitpod",level:2},{value:"Local setup",id:"local-setup",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Running the project",id:"running-the-project",level:3},{value:"Starting the dependencies",id:"starting-the-dependencies",level:4},{value:"Starting the API Server",id:"starting-the-api-server",level:4},{value:"Starting the Front Office",id:"starting-the-front-office",level:4},{value:"Starting the Widget",id:"starting-the-widget",level:4}],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"development-environment-setup"},"Development environment setup"),(0,r.kt)("p",null,"We welcome contributions from the community. This guide will help you get started with your development environment."),(0,r.kt)("h2",{id:"using-gitpod"},"Using Gitpod"),(0,r.kt)("p",null,"The fastest way to get started is using ",(0,r.kt)("a",{parentName:"p",href:"https://gitpod.io/"},"Gitpod"),". With a single click, you can start a fully functional development environment with all the tools you need already pre-installed. "),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://gitpod.io/#https://github.com/fonoster/goodtok"},(0,r.kt)("img",{parentName:"a",src:"https://gitpod.io/button/open-in-gitpod.svg",alt:"Open in Gitpod"}))),(0,r.kt)("p",null,"This will start a workspace with all the dependencies installed and instances of the API Server, Front Office, and Widget running. The workspace should automatically open the Front Office, Widget, and the Mailhog UI. If not, you can open them manually by going to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Ports")," tab and clicking on the ",(0,r.kt)("inlineCode",{parentName:"p"},"Open Browser")," button."),(0,r.kt)("p",null,"\u26a0\ufe0f ",(0,r.kt)("strong",{parentName:"p"},"We have an outstanding issue to make calls using this setup")),(0,r.kt)("h2",{id:"local-setup"},"Local setup"),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-docker/"},"Docker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/install/"},"Docker Compose")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.npmjs.com/get-npm"},"NPM"))),(0,r.kt)("p",null,"Once you have the prerequisites installed, you can clone the repository and install the dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/fonoster/goodtok\ncd goodtok\nnpm install\nnpm run build\n")),(0,r.kt)("h3",{id:"running-the-project"},"Running the project"),(0,r.kt)("p",null,"To run the project, you need to start the dependencies services, then the backend, and finally the frontend and Widget."),(0,r.kt)("h4",{id:"starting-the-dependencies"},"Starting the dependencies"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose -f compose.yaml -f compose.dev.yaml up peerjs postgres mailhog adminer -d\n")),(0,r.kt)("p",null,"The previous command will start the services in the background. If you want to see the logs, you can remove the ",(0,r.kt)("inlineCode",{parentName:"p"},"-d")," flag. "),(0,r.kt)("p",null,"It is important to highlight that any emails sent by the application will be intercepted by Mailhog. You can access the Mailhog UI at ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:8025"},"http://localhost:8025"),"."),(0,r.kt)("p",null,"To stop the services, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose -f compose.yaml -f compose.dev.yaml down\n")),(0,r.kt)("h4",{id:"starting-the-api-server"},"Starting the API Server"),(0,r.kt)("p",null,"Before starting the backend you need to initialize the database and create a ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file. "),(0,r.kt)("p",null,"First, initialize the database by running the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run db:migrate\n")),(0,r.kt)("p",null,"Then, copy the ",(0,r.kt)("inlineCode",{parentName:"p"},".env.example")," file to ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," and update the values accordingly. "),(0,r.kt)("p",null,"You will need to update the ",(0,r.kt)("inlineCode",{parentName:"p"},"CLOAK_ENCRYPTION_KEY")," variable with a new key from ",(0,r.kt)("a",{parentName:"p",href:"https://cloak.47ng.com/"},"Cloak"),"."),(0,r.kt)("p",null,"Finally, you can start the backend by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run start:apiserver\n")),(0,r.kt)("h4",{id:"starting-the-front-office"},"Starting the Front Office"),(0,r.kt)("p",null,"To start the Front Office, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run start:frontoffice\n")),(0,r.kt)("h4",{id:"starting-the-widget"},"Starting the Widget"),(0,r.kt)("p",null,"To start the Widget, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run start:widget\n")),(0,r.kt)("p",null,"By default we create a Goodtok Workspace and the Widget will connect to it. When you open the Widget, you might see it is ",(0,r.kt)("inlineCode",{parentName:"p"},"offline"),". That means that the Workspace is disabled or you are outside the hours of operations. You can change that by going to the Workspace settings and enabling it."))}d.isMDXComponent=!0}}]);